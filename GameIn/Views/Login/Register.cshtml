@model GameIn.Models.Users


@{
    ViewBag.Title = Resources.Resources.Register;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@using (Html.BeginForm()) {
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true)

    <fieldset>
        <legend>@Resources.Resources.Register</legend>

        <div class="editor-label">
            @Html.LabelFor(model => model.Email, Resources.Resources.Email)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Email)
            @Html.ValidationMessageFor(model => model.Email)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.UserName, Resources.Resources.Username)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.UserName)
            @Html.ValidationMessageFor(model => model.UserName)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Password, Resources.Resources.Password)
        </div>
        <div class="editor-field">
            @Html.PasswordFor(model => model.Password)
            @Html.ValidationMessageFor(model => model.Password)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Name, Resources.Resources.Name)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Name)
            @Html.ValidationMessageFor(model => model.Name)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Gender, Resources.Resources.Gender)
        </div>
        <div class="editor-field">
            @Html.DropDownList(
                                Resources.Resources.Gender,
                                new SelectList
                                (
                                    new[]
                                    {
                                        new { Value = "true", Text = @Resources.Resources.Male },
                                        new { Value = "false", Text = @Resources.Resources.Female },
                                    },
                                    "Value",
                                    "Text",
                                    Model
                                )
                            )

            @Html.ValidationMessageFor(model => model.Gender)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Country, Resources.Resources.Country)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Country)
            @Html.ValidationMessageFor(model => model.Country)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.State, Resources.Resources.State)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.State)
            @Html.ValidationMessageFor(model => model.State)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.Region, Resources.Resources.Region)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.Region)
            @Html.ValidationMessageFor(model => model.Region)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.SubRegion, Resources.Resources.SubRegion)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.SubRegion)
            @Html.ValidationMessageFor(model => model.SubRegion)
        </div>

        <div class="editor-label">
            @Html.LabelFor(model => model.TimeZone, Resources.Resources.TimeZone)
        </div>
        <div class="editor-field">
            @Html.EditorFor(model => model.TimeZone)
            @Html.ValidationMessageFor(model => model.TimeZone)
        </div>
        <p>
            <input type="submit" value="@Resources.Resources.CreateAccount" />
        </p>
    </fieldset>
}

<div>
    @Html.ActionLink(Resources.Resources.BackLogin, "Home", "Login",
    new
    {
        lang = HttpContext.Current.Request.RequestContext.RouteData.Values["Lang"] != null
            ? HttpContext.Current.Request.RequestContext.RouteData.Values["Lang"].ToString() : ""
    }, null)
</div>
